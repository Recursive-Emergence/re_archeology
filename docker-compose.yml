version: '3.9'

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.slim
      target: production
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
      # Server configuration (override .env if needed)
      - PORT=8080
      - HOST=0.0.0.0
      - WORKERS=1
      
      # Performance optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      
      # Application settings (will be overridden by .env if present)
      - LOG_LEVEL=info
      - MAX_UPLOAD_SIZE=50MB
      - CORS_ORIGINS=*
      
      # Note: Google OAuth, JWT, and OpenAI configurations are loaded from .env file
      # Do not override them here to allow .env values to take precedence
      
    volumes:
      # Mount source code for development
      - ./backend:/app/backend:delegated
      - ./frontend:/app/frontend:delegated
      - ./data:/app/data:cached
      # Mount environment file if it exists
      - ./.env:/app/.env:ro
    
    # Development overrides
    user: root
    command: >
      sh -c "
        export PYTHONPATH=/app &&
        export HOST=0.0.0.0 &&
        export PORT=8080 &&
        echo 'Environment variables:' &&
        echo 'HOST=' && echo $HOST &&
        echo 'PORT=' && echo $PORT &&
        echo 'PYTHONPATH=' && echo $PYTHONPATH &&
        echo 'Starting uvicorn directly...' &&
        uvicorn backend.api.main:app --host 0.0.0.0 --port 8080 --reload --log-level info
      "
    
    # Resource limits for better container management
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    
    # Restart policy
    restart: unless-stopped

# Networks for better isolation
networks:
  default:
    name: re-archaeology-network

# Volumes for data persistence (Redis removed as not needed)
volumes:
  # Redis volume removed - not using Redis in Cloud Run deployment
